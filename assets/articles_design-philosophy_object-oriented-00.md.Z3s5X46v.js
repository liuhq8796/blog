import{_ as e,o as a,c as t,R as r}from"./chunks/framework.aCxxyqhJ.js";const m=JSON.parse('{"title":"面向对象——00.什么是面向对象","description":"","frontmatter":{},"headers":[],"relativePath":"articles/design-philosophy/object-oriented-00.md","filePath":"articles/design-philosophy/object-oriented-00.md","lastUpdated":1702198113000}'),o={name:"articles/design-philosophy/object-oriented-00.md"},i=r('<h1 id="面向对象——00-什么是面向对象" tabindex="-1">面向对象——00.什么是面向对象 <a class="header-anchor" href="#面向对象——00-什么是面向对象" aria-label="Permalink to &quot;面向对象——00.什么是面向对象&quot;">​</a></h1><h2 id="什么是面向对象编程" tabindex="-1">什么是面向对象编程？ <a class="header-anchor" href="#什么是面向对象编程" aria-label="Permalink to &quot;什么是面向对象编程？&quot;">​</a></h2><p>面向对象编程（Object-Oriented Programming, OOP）是一种编程范式或编程风格。它以类和对象作为组织代码的基本单元，并将封装、抽象、继承、多态四个特性作为代码设计和实现的基石。</p><h2 id="什么是面向对象编程语言" tabindex="-1">什么是面向对象编程语言？ <a class="header-anchor" href="#什么是面向对象编程语言" aria-label="Permalink to &quot;什么是面向对象编程语言？&quot;">​</a></h2><p>面向对象编程语言（Object-Oriented Programming Language, OOPL）是支持类和对象的语法机制，并有现成的语法机制来实现面向对象编程四大特性（封装、抽象、继承、多态）的编程语言。</p><h2 id="如何判定一门编程语言是否是面向对象编程语言" tabindex="-1">如何判定一门编程语言是否是面向对象编程语言？ <a class="header-anchor" href="#如何判定一门编程语言是否是面向对象编程语言" aria-label="Permalink to &quot;如何判定一门编程语言是否是面向对象编程语言？&quot;">​</a></h2><p>如果按照严格的定义，需要有现成的语法支持类和对象，以及封装、抽象、继承、多态四个特性，才能叫做面向对象编程语言。如果放宽要求的话，只要某种编程语言支持类、对象语法机制，那基本上就可以说这种编程语言是面向对象编程语言了，不一定非得要求具有所有的四大特性。</p><h2 id="面向对象编程和面向对象编程语言之间有何关系" tabindex="-1">面向对象编程和面向对象编程语言之间有何关系？ <a class="header-anchor" href="#面向对象编程和面向对象编程语言之间有何关系" aria-label="Permalink to &quot;面向对象编程和面向对象编程语言之间有何关系？&quot;">​</a></h2><p>面向对象编程一般使用面向对象编程语言来进行，但是，不用面向对象编程语言，我们照样可以进行面向对象编程。反过来讲，即便我们使用面向对象编程语言，写出来的代码也不一定是面向对象编程风格的，也有可能是面向过程编程风格的。</p><h2 id="什么是面向对象分析和面向对象设计" tabindex="-1">什么是面向对象分析和面向对象设计？ <a class="header-anchor" href="#什么是面向对象分析和面向对象设计" aria-label="Permalink to &quot;什么是面向对象分析和面向对象设计？&quot;">​</a></h2><p>面向对象分析（Object-Oriented Analysis, OOA）和面向对象设计（Object-Oriented Design, OOD）是面向对象编程中的两个重要环节。简单点讲，面向对象分析就是要搞清楚做什么，面向对象设计就是要搞清楚怎么做。两个阶段最终的产出是类的设计，包括程序被拆解为哪些类，每个类有哪些属性方法、类与类之间如何交互等等。</p>',11),n=[i];function s(d,c,h,l,p,_){return a(),t("div",null,n)}const u=e(o,[["render",s]]);export{m as __pageData,u as default};
