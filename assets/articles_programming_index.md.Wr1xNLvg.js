import{_ as r,o as i,c as a,U as e}from"./chunks/framework.CPG1oFOX.js";const b=JSON.parse('{"title":"文章目录","description":"","frontmatter":{},"headers":[],"relativePath":"articles/programming/index.md","filePath":"articles/programming/index.md","lastUpdated":1704195406000}'),l={name:"articles/programming/index.md"},t=e('<h1 id="文章目录" tabindex="-1">文章目录 <a class="header-anchor" href="#文章目录" aria-label="Permalink to &quot;文章目录&quot;">​</a></h1><h2 id="程序设计" tabindex="-1">程序设计 <a class="header-anchor" href="#程序设计" aria-label="Permalink to &quot;程序设计&quot;">​</a></h2><ul><li><a href="/blog/articles/programming/object-oriented-00.html">面向对象——00.什么是面向对象</a></li><li><a href="/blog/articles/programming/object-oriented-01.html">面向对象——01.四大特性</a></li><li><a href="/blog/articles/programming/object-oriented-02.html">面向对象——02.面向对象编程中的面向过程</a></li><li><a href="/blog/articles/programming/object-oriented-03.html">面向对象——03.抽象类 vs 接口</a></li><li><a href="/blog/articles/programming/object-oriented-04.html">面向对象——04.基于接口而非实现编程</a></li><li><a href="/blog/articles/programming/object-oriented-05.html">面向对象——05.多用组合少用继承</a></li><li><a href="/blog/articles/programming/object-oriented-06.html">面向对象——06.贫血模型与充血模型</a></li><li><a href="/blog/articles/programming/object-oriented-07.html">面向对象——07.类与类之间的交互关系</a></li><li><a href="/blog/articles/programming/programming-principles-00.html">设计原则——00.单一职责原则</a></li><li><a href="/blog/articles/programming/programming-principles-01.html">设计原则——01.开闭原则</a></li><li><a href="/blog/articles/programming/programming-principles-02.html">设计原则——02.里氏替换原则</a></li><li><a href="/blog/articles/programming/programming-principles-03.html">设计原则——03.接口隔离原则</a></li><li><a href="/blog/articles/programming/programming-principles-04.html">设计原则——04.控制反转、依赖注入、依赖反转</a></li><li><a href="/blog/articles/programming/programming-principles-05.html">设计原则——05.KISS 原则与 YAGNI 原则</a></li><li><a href="/blog/articles/programming/programming-principles-06.html">设计原则——06.DRY 原则</a></li></ul>',3),o=[t];function m(n,g,c,s,p,h){return i(),a("div",null,o)}const _=r(l,[["render",m]]);export{b as __pageData,_ as default};
