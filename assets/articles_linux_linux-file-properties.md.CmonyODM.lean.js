import{_ as e,c as s,a2 as o,o as l}from"./chunks/framework.GBc956F4.js";const k=JSON.parse('{"title":"Linux 文件属性","description":"","frontmatter":{},"headers":[],"relativePath":"articles/linux/linux-file-properties.md","filePath":"articles/linux/linux-file-properties.md","lastUpdated":1735196592000}'),t={name:"articles/linux/linux-file-properties.md"};function d(a,i,c,n,r,p){return l(),s("div",null,i[0]||(i[0]=[o(`<h1 id="linux-文件属性" tabindex="-1">Linux 文件属性 <a class="header-anchor" href="#linux-文件属性" aria-label="Permalink to &quot;Linux 文件属性&quot;">​</a></h1><p>用ls –l命令查看文件时，共显示了 9 列内容（用空格划分列），它们都代表什么含义呢？</p><ul><li><p><strong>第 1 列：</strong> 包含所查看文件的类型、所有者、所属组以及其他用户对该文件的权限。第 1 列共 11 位，其中第 1 位用来描述该文件的类型。上例中我们看到的文件类型是<code>-</code>，其实除了这个，还有<code>d</code>、<code>l</code>、<code>b</code>、<code>c</code>、<code>s</code>等，具体描述如下所示。</p><ul><li><code>-</code>表示该文件为普通文件。</li><li><code>d</code>表示该文件为目录。</li><li><code>l</code>表示该文件为链接文件（link file），软链接即为该类型，示例命令如下：<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ls -l /etc/rc.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrwxrwxrwx.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7月</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 11:29</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/rc.local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rc.d/rc.local</span></span></code></pre></div>上例中，第 1 列<code>lrwxrwxrwx.</code>的第 1 位是<code>l</code>，表示该文件为链接文件。</li><li><code>b</code>表示该文件为块设备，比如 /dev/sda 就是这样的文件，磁盘分区文件就是这种类型。</li><li><code>c</code>表示该文件为串行端口设备文件（又称字符设备文件），比如键盘、鼠标、打印机、tty 终端等都是这样的文件。</li><li><code>s</code>表示该文件为套接字文件（socket），应用于进程之间的通信。</li><li>在文件类型后面紧接着的 9 位，每 3 位为一组，上例中（<code>lrwxrwxrwx.</code>）的这 9 位均为<code>rwx</code>这 3 个参数的组合。其中，<code>r</code>代表可读，<code>w</code>代表可写，<code>x</code>代表可执行。前 3 位为所有者的权限，中间 3 位为所属组的权限，最后 3 位为其他非本用户组的用户的权限。</li></ul><p>假设一个文件的属性为<code>-rwxr-xr--.</code>，它代表的意思是，该文件为普通文件，文件所有者对其可读、可写且可执行，文件所属组对其可读、不可写但可执行，其他用户对其只可读。对于一个目录来讲，打开这个目录即为执行这个目录，所以任何一个用户必须要有<code>x</code>权限才能打开并查看该目录下的内容。例如，一个目录的属性为<code>drwxr--r--.</code>，其所有者为 root，只有 root 有<code>x</code>权限，那么除 root 之外的所有用户都不能打开这个目录。</p><p>关于前面提到的第 1 列最后 1 位的“<code>.</code>”，老版本 CentOS 5 是没有这个点的，这主要是因为新版本的<code>ls</code>命令添加了 SELinux 或者 acl 的属性。如果文件或者目录使用了 SELinux context 的属性，这里会是一个点“<code>.</code>”；如果使用了 acl 的属性，这里会是一个加号“<code>+</code>”，你只要了解是怎么回事即可。</p></li><li><p><strong>第 2 列：</strong> 表示该文件占用的节点（<code>inode</code>），如果是目录，那么这个数值与该目录下的子目录数量有关。</p></li><li><p><strong>第 3 列：</strong> 表示该文件的所有者。</p></li><li><p><strong>第 4 列：</strong> 表示该文件的所属组。</p></li><li><p><strong>第 5 列：</strong> 表示该文件的大小。</p></li><li><p><strong>第 6 列、第 7 列和第 8 列：</strong> 表示该文件最后一次被修改的时间（<code>mtime</code>），依次为月、日以及具体时间。</p></li><li><p><strong>第 9 列：</strong> 表示文件名。</p></li></ul>`,3)]))}const x=e(t,[["render",d]]);export{k as __pageData,x as default};
